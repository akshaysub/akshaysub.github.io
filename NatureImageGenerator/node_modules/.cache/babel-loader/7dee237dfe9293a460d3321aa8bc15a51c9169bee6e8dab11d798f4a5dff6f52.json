{"ast":null,"code":"var _jsxFileName = \"/Users/akshay/Desktop/random-car-gen/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { fetchRandomImage } from './api';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  async function handleSearch(e) {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(null);\n    try {\n      const image = await fetchRandomImage();\n      setImage(image);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Random Nature Image Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), image && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: image.tags\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image.webformatURL,\n        alt: image.tags\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleSearch,\n      disabled: isLoading,\n      children: \"Generate Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+JaJ6SSJXnybpmTcS+lpHdlt0sg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","fetchRandomImage","jsxDEV","_jsxDEV","App","_s","image","setImage","isLoading","setIsLoading","error","setError","handleSearch","e","preventDefault","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","tags","src","webformatURL","alt","type","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/akshay/Desktop/random-car-gen/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { fetchRandomImage } from './api';\nimport './App.css';\n\nfunction App() {\n  const [image, setImage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  async function handleSearch(e) {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const image = await fetchRandomImage();\n      setImage(image);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n  \n  return (\n    <div className=\"app-container\">\n      <h1 className=\"title\">Random Nature Image Generator</h1>\n      {image && (\n        <div className=\"image-container\">\n          <h2>{image.tags}</h2>\n          <img src={image.webformatURL} alt={image.tags} />\n        </div>\n      )}\n      <button type=\"button\" onClick={handleSearch} disabled={isLoading}>\n        Generate Image\n      </button>\n      {isLoading && <p>Loading...</p>}\n      {error && <p>{error}</p>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,gBAAgB,QAAQ,OAAO;AACxC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExC,eAAeY,YAAYA,CAACC,CAAC,EAAE;IAC7BA,CAAC,CAACC,cAAc,EAAE;IAClBL,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAML,KAAK,GAAG,MAAML,gBAAgB,EAAE;MACtCM,QAAQ,CAACD,KAAK,CAAC;IACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAACK,OAAO,CAAC;IACzB,CAAC,SAAS;MACRN,YAAY,CAAC,KAAK,CAAC;IACrB;EACF;EAEA,oBACEN,OAAA;IAAKa,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5Bd,OAAA;MAAIa,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAC;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EACvDf,KAAK,iBACJH,OAAA;MAAKa,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9Bd,OAAA;QAAAc,QAAA,EAAKX,KAAK,CAACgB;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACrBlB,OAAA;QAAKoB,GAAG,EAAEjB,KAAK,CAACkB,YAAa;QAACC,GAAG,EAAEnB,KAAK,CAACgB;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEpD,eACDlB,OAAA;MAAQuB,IAAI,EAAC,QAAQ;MAACC,OAAO,EAAEf,YAAa;MAACgB,QAAQ,EAAEpB,SAAU;MAAAS,QAAA,EAAC;IAElE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,EACRb,SAAS,iBAAIL,OAAA;MAAAc,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,EAC9BX,KAAK,iBAAIP,OAAA;MAAAc,QAAA,EAAIP;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACpB;AAEV;AAAChB,EAAA,CApCQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}