{"ast":null,"code":"var _jsxFileName = \"/Users/akshay/Desktop/random-car-gen/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { fetchRandomImage } from './api';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const imageContainerRef = useRef(null);\n  const buttonRef = useRef(null);\n  async function handleGenerateImage() {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const image = await fetchRandomImage('');\n      setImage(image);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n  useEffect(() => {\n    const imageContainer = imageContainerRef.current;\n    const button = buttonRef.current;\n    if (imageContainer && button) {\n      const containerHeight = imageContainer.offsetHeight;\n      const buttonHeight = button.offsetHeight;\n      button.style.top = `${containerHeight + buttonHeight}px`;\n    }\n  }, [image]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Random Nature Image Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-container\",\n        ref: imageContainerRef,\n        children: image ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image.webformatURL,\n          alt: image.tags,\n          onLoad: () => {\n            const imageContainer = imageContainerRef.current;\n            const button = buttonRef.current;\n            if (imageContainer && button) {\n              const containerHeight = imageContainer.offsetHeight;\n              const buttonHeight = button.offsetHeight;\n              button.style.top = `${containerHeight + buttonHeight}px`;\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://via.placeholder.com/640x480.png?text=Click+the+button+to+generate+a+random+image\",\n          alt: \"Placeholder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerateImage,\n        disabled: isLoading,\n        ref: buttonRef,\n        children: \"Generate Random Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 23\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://example.com\",\n        children: \"My Portfolio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lPIuJFIIsLNHKhhr/J15FDTRYas=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","fetchRandomImage","jsxDEV","_jsxDEV","App","_s","image","setImage","isLoading","setIsLoading","error","setError","imageContainerRef","buttonRef","handleGenerateImage","message","imageContainer","current","button","containerHeight","offsetHeight","buttonHeight","style","top","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","src","webformatURL","alt","tags","onLoad","onClick","disabled","href","_c","$RefreshReg$"],"sources":["/Users/akshay/Desktop/random-car-gen/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { fetchRandomImage } from './api';\nimport './App.css';\n\nfunction App() {\n  const [image, setImage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const imageContainerRef = useRef(null);\n  const buttonRef = useRef(null);\n\n  async function handleGenerateImage() {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const image = await fetchRandomImage('');\n      setImage(image);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    const imageContainer = imageContainerRef.current;\n    const button = buttonRef.current;\n\n    if (imageContainer && button) {\n      const containerHeight = imageContainer.offsetHeight;\n      const buttonHeight = button.offsetHeight;\n\n      button.style.top = `${containerHeight + buttonHeight}px`;\n    }\n  }, [image]);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Random Nature Image Generator</h1>\n      </header>\n      <div className=\"content\">\n        <div className=\"image-container\" ref={imageContainerRef}>\n          {image ? (\n            <img\n              src={image.webformatURL}\n              alt={image.tags}\n              onLoad={() => {\n                const imageContainer = imageContainerRef.current;\n                const button = buttonRef.current;\n\n                if (imageContainer && button) {\n                  const containerHeight = imageContainer.offsetHeight;\n                  const buttonHeight = button.offsetHeight;\n\n                  button.style.top = `${containerHeight + buttonHeight}px`;\n                }\n              }}\n            />\n          ) : (\n            <img\n              src=\"https://via.placeholder.com/640x480.png?text=Click+the+button+to+generate+a+random+image\"\n              alt=\"Placeholder\"\n            />\n          )}\n        </div>\n        <button onClick={handleGenerateImage} disabled={isLoading} ref={buttonRef}>\n          Generate Random Image\n        </button>\n        {isLoading && <p>Loading...</p>}\n        {error && <p>{error}</p>}\n      </div>\n      <footer>\n        <a href=\"https://example.com\">My Portfolio</a>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,gBAAgB,QAAQ,OAAO;AACxC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMc,iBAAiB,GAAGZ,MAAM,CAAC,IAAI,CAAC;EACtC,MAAMa,SAAS,GAAGb,MAAM,CAAC,IAAI,CAAC;EAE9B,eAAec,mBAAmBA,CAAA,EAAG;IACnCL,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAML,KAAK,GAAG,MAAML,gBAAgB,CAAC,EAAE,CAAC;MACxCM,QAAQ,CAACD,KAAK,CAAC;IACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAACK,OAAO,CAAC;IACzB,CAAC,SAAS;MACRN,YAAY,CAAC,KAAK,CAAC;IACrB;EACF;EAEAV,SAAS,CAAC,MAAM;IACd,MAAMiB,cAAc,GAAGJ,iBAAiB,CAACK,OAAO;IAChD,MAAMC,MAAM,GAAGL,SAAS,CAACI,OAAO;IAEhC,IAAID,cAAc,IAAIE,MAAM,EAAE;MAC5B,MAAMC,eAAe,GAAGH,cAAc,CAACI,YAAY;MACnD,MAAMC,YAAY,GAAGH,MAAM,CAACE,YAAY;MAExCF,MAAM,CAACI,KAAK,CAACC,GAAG,GAAI,GAAEJ,eAAe,GAAGE,YAAa,IAAG;IAC1D;EACF,CAAC,EAAE,CAACf,KAAK,CAAC,CAAC;EAEX,oBACEH,OAAA;IAAKqB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBtB,OAAA;MAAAsB,QAAA,eACEtB,OAAA;QAAAsB,QAAA,EAAI;MAA6B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC/B,eACT1B,OAAA;MAAKqB,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtBtB,OAAA;QAAKqB,SAAS,EAAC,iBAAiB;QAACM,GAAG,EAAElB,iBAAkB;QAAAa,QAAA,EACrDnB,KAAK,gBACJH,OAAA;UACE4B,GAAG,EAAEzB,KAAK,CAAC0B,YAAa;UACxBC,GAAG,EAAE3B,KAAK,CAAC4B,IAAK;UAChBC,MAAM,EAAEA,CAAA,KAAM;YACZ,MAAMnB,cAAc,GAAGJ,iBAAiB,CAACK,OAAO;YAChD,MAAMC,MAAM,GAAGL,SAAS,CAACI,OAAO;YAEhC,IAAID,cAAc,IAAIE,MAAM,EAAE;cAC5B,MAAMC,eAAe,GAAGH,cAAc,CAACI,YAAY;cACnD,MAAMC,YAAY,GAAGH,MAAM,CAACE,YAAY;cAExCF,MAAM,CAACI,KAAK,CAACC,GAAG,GAAI,GAAEJ,eAAe,GAAGE,YAAa,IAAG;YAC1D;UACF;QAAE;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACF,gBAEF1B,OAAA;UACE4B,GAAG,EAAC,0FAA0F;UAC9FE,GAAG,EAAC;QAAa;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAEpB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACG,eACN1B,OAAA;QAAQiC,OAAO,EAAEtB,mBAAoB;QAACuB,QAAQ,EAAE7B,SAAU;QAACsB,GAAG,EAAEjB,SAAU;QAAAY,QAAA,EAAC;MAE3E;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,EACRrB,SAAS,iBAAIL,OAAA;QAAAsB,QAAA,EAAG;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,EAC9BnB,KAAK,iBAAIP,OAAA;QAAAsB,QAAA,EAAIf;MAAK;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACpB,eACN1B,OAAA;MAAAsB,QAAA,eACEtB,OAAA;QAAGmC,IAAI,EAAC,qBAAqB;QAAAb,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAI;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACvC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEV;AAACxB,EAAA,CA1EQD,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AA4EZ,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}